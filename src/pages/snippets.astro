---
import SnippetCard from "@/components/snippet-card.astro";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { getCollection } from "astro:content";

async function sortCollection() {
  const collection = await getCollection("snippets");
  return collection.sort((a, b) => new Date(b.data.createdAt).getTime() - new Date(a.data.createdAt).getTime());
}

const snippets = await sortCollection();
---

<StarlightPage frontmatter={{ title: "Snippets", tableOfContents: false, prev: false, next: false }}>
  <div class="grid">
    {
      snippets.map((snippet) => (
        <SnippetCard
          title={snippet.data.title}
          description={snippet.data.description}
          language={snippet.data.language}
          slug={snippet.data.slug}
          tags={snippet.data.tags}
          code={snippet.body!}
          createdAt={snippet.data.createdAt}
        />
      ))
    }
  </div>
</StarlightPage>

<style is:inline>
  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(500px, 100%), 1fr));
    gap: 20px;
    margin: 0 auto;
  }

  .sort-group {
    display: flex;
    justify-content: end;
    gap: 10px;
    margin-bottom: 2rem;
  }

  .btn {
    height: 36px;
    width: 36px;
    display: inline-flex;
    gap: 0.5rem;
    justify-content: center;
    align-items: center;
    border-radius: 0.375rem;
    border-style: solid;
    border-width: 1px;
    border-color: var(--sl-color-gray-5);
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 500;
    white-space: nowrap;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);

    outline: none;
    background-color: transparent;
  }

  .btn svg {
    pointer-events: none;
    width: 16px;
    height: 16px;
    shrink: 0;
  }

  .btn:hover {
    background-color: rgb(39, 39, 42);
    color: var(--sl-color-accent-high);
  }

  /* ==== Overrides ==== */

  .sl-markdown-content :not(a, strong, em, del, span, input, code, br) + :not(a, strong, em, del, span, input, code, br, :where(.not-content *)) {
    margin-top: 0;
  }

  .sl-markdown-content h2:not(:where(.not-content *)) {
    font-size: 1.5rem;
  }

  .sl-container {
    --sl-content-width: 1200px;
  }

  @media (min-width: 50rem) {
    .header {
      --__toc-width: unset;
    }
  }

  .header :nth-child(2).sl-flex {
    display: block;
  }
</style>
